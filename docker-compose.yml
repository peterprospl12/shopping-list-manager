services:
  angular-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - gateway
    container_name: angular-app

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - GATEWAY_HOST=localhost:8084
      - USER_URL=http://user-service:8080
      - SHOPPING_LIST_URL=http://shopping-list-service:8080
      - PRODUCT_URL=http://product-service:8080
      - SERVER_PORT=8084
    container_name: gateway
    ports:
      - "8084:8084"

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DATABASE_URL=jdbc:mysql://db:3306/userdb
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
      - SERVER_PORT=8080
      - GATEWAY_URL=http://localhost:8084/
    depends_on:
      - gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://user-service:8080/actuator/health"]
      interval: 5s
      timeout: 30s
      retries: 30
    container_name: user-service
    

  shopping-list-service:
    build:
      context: ./shopping-list-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DATABASE_URL=jdbc:mysql://db:3306/shoppinglistdb
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
      - SERVER_PORT=8080
      - GATEWAY_URL=http://user-service:8080/
    depends_on:
      user-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://shopping-list-service:8080/actuator/health"]
      interval: 5s
      timeout: 30s
      retries: 30

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DATABASE_URL=jdbc:mysql://db:3306/productdb
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
      - SERVER_PORT=8080
      - GATEWAY_URL=http://shopping-list-service:8080/
    depends_on:
      shopping-list-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://product-service:8080/actuator/health"]
      interval: 5s
      timeout: 30s
      retries: 30